generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String               @id @default(cuid())
  name               String
  email              String               @unique
  password           String
  role               Role                 @default(MEMBER)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  memberProfile      MemberProfile?
  Article            Article[]
  PasswordResetToken PasswordResetToken[]
}

// --- Tambahkan Model MemberProfile BARU di sini ---
model MemberProfile {
  id                       String                  @id @default(cuid())
  photoProfile             String? // URL atau path ke foto profil
  phoneNumber              String?                 @unique // Bisa dibuat unik jika perlu
  dateOfBirth              DateTime?
  gender                   Gender?
  consultationPreference   ConsultationPreference?
  consultationPurpose      String?
  mentalHealthHistory      String?                 @db.Text // Gunakan tipe Text untuk isian panjang
  relatedMedicalConditions String?
  urgencyLevel             UrgencyLevel?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Kunci relasi one-to-one dengan User
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique // @unique di sini memastikan relasi one-to-one
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Article {
  id          String   @id @default(cuid())
  title       String
  category    String
  publishDate DateTime
  image       String
  content     String
  authorId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author      User     @relation(fields: [authorId], references: [id])
}

enum Role {
  ADMIN
  MEMBER
  PSIKOLOG
}

enum Gender {
  MALE
  FEMALE
  PREFER_NOT_SAY
}

enum ConsultationPreference {
  ONLINE
  IN_PERSON
  NO_PREFERENCE
}

enum UrgencyLevel {
  LOW
  MEDIUM
  HIGH
}
